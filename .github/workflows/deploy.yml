name: Deploy

on:
  push:
    branches:
    - main
    - feature/deploy-to-cloud
  workflow_dispatch:

jobs:
  spin:
    runs-on: ubuntu-22.04
    name: Build application
    steps:
      - uses: actions/checkout@v3

      - name: Setup rust
        uses: dtolnay/rust-toolchain@stable
        with:
            targets: wasm32-wasi
            components: clippy, rustfmt

      - name: Setup Go
        uses: actions/setup-go@v4.0.0
        with:
          go-version-file: 'api/post/go.mod'
          cache-dependency-path: 'api/post/go.sum'

      # download tinygo from dev docker container to use new 'reflect' and 'encoding/json' features
      - name: Setup tinygo
        run: |
          GOPATH=$(go env GOPATH)
          IMAGE_TAG="ghcr.io/tinygo-org/tinygo-dev:sha-8b9bee4cad5693105c1ee268ea29e5d3f8cb5408"
          docker pull ${IMAGE_TAG}
          CONTAINER=$(docker create --platform=linux/amd64 ${IMAGE_TAG})
          docker cp ${CONTAINER}:/tinygo/build/tinygo $GOPATH/bin/
          docker cp ${CONTAINER}:/tinygo/build/wasm-opt $GOPATH/bin/
          docker rm -v ${CONTAINER}

      - name: Setup Node.js
        uses: actions/setup-node@v2.5.2
        with:
          node-version: '>=18.13.0'
          cache-dependency-path: web/package-lock.json

      - name: Setup spin
        uses: fermyon/actions/spin/setup@v1
        with:
          version: canary

      - name: Install dependencies
        run: |
          cd web
          npm install
          cd -

      - name: Show Versions
        run: |
          rustup show
          echo "----------------------------"
          go version
          tinygo version
          echo "----------------------------"
          spin --version

      - name: Build & Deploy
        uses: fermyon/actions/spin/deploy@v1
        with:
          fermyon_token: ${{ secrets.FERMYON_CLOUD_TOKEN }}
